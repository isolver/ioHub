############################################
Tobii EyeTracker Class
############################################

.. note::
    Supported Platforms:
    
    Windows (XP SP2, SP3, Windows 7), Linux should work as well, but has yet to be tested.
    
    Supported Tobii Eye Tracker Models: 
    
    Tobii Analytics SDK 3.0 RC 1, which is the Tobii software that the Tobii implementation of the ioHub common eye tracker interface relies on, supports the following eye trackers out-of-the-box: Tobii X60, Tobii X120, Tobii T60, Tobii T120, Tobii T60 XL, Tobii TX300 and Tobii IS-1. 
    Tobii Analytics SDK 3.0 RC 1 does **not** support the following eye trackers, and therefore neither does the ioHub common eye tracker interface: Tobii 1750, Tobii X50, Tobii 2150, Tobii 1740 (D10), Tobii P10, C-Eye, and PCEye. Support for Tobii 1750, Tobii X50 and Tobii 2150 models will be added in a later firmware release.
    
.. note::    
    Currently Python 2.6 must be used to use the Tobii eye tracker, Python 2.7 is not supported. When a Python 2.7 compatible version of the Tobii Python package becomes available, the Tobii system will also be able to use used within PsychoPy and ioHub when running Python 2.7.

.. autoclass:: ioHub.devices.eyetracker.hw.tobii.EyeTracker
    :exclude-members: ALL_EVENT_CLASSES, CLASS_ATTRIBUTE_NAMES, DEVICE_BUFFER_LENGTH_INDEX, DEVICE_CLASS_NAME_INDEX, DEVICE_MAX_ATTRIBUTE_INDEX, DEVICE_TIMEBASE_TO_SEC, DEVICE_TYPE_ID, DEVICE_TYPE_ID_INDEX, DEVICE_TYPE_STRING, DEVICE_USER_LABEL_INDEX, NUMPY_DTYPE, e, DEVICE_FIRMWARE_VERSION_INDEX, DEVICE_HARDWARE_VERSION_INDEX,DEVICE_MANUFACTURER_NAME_INDEX,DEVICE_MODEL_NAME_INDEX, DEVICE_MODEL_NUMBER_INDEX, DEVICE_NUMBER_INDEX, DEVICE_SERIAL_NUMBER_INDEX, DEVICE_SOFTWARE_VERSION_INDEX, EVENT_CLASS_NAMES

Installing the Tobii Tobii Analytics SDK 3.0 RC 1
##################################################

A copy of the Tobii Python Module and required C DLLs is bundled with the ioHub 
module for Windows when using Python 2.6. The only additional software **you need
to be sure is installed is the Apple Boujour Software.**
    
Tobii Device iohub_config.yaml settings
#########################################

To specify the use of a Tobii eye tracking device within your experiment,
add the following to the iohub_config.yaml file in the devices list::
 
    - eyetracker.hw.tobii.EyeTracker:
        # Should the device be enabled by the ioHub Server? If False, it is the
        # same as if the device was not in the device list at all. 
        enable: True
        # The name of the device when accessed runtime the experiment run-time.
        name: tracker
        # Optionally restrict detected Tobii eye trackers that are accessable by
        # the computer to those with a matching Tobii model name. To not filter
        # by model name, comment the parameter out, or remove it from the 
        # device configuration. 
        #model_name: 
        # Optionally restrict the detected Tobii eye tracker to only the one 
        # with a matching Tobii serial number. To not filter by serial number,
        # comment the parameter out, or remove it from the device configuration. 
        #serial_number: 
        # Should events generated by the device be saved to the ioHub DataStore?
        save_events: True
        # Should events generated by the device be streamed to the Experiment Process
        # for online access?
        stream_events: True
        # The number of events that the device event que will store before replacing
        # the oldest event in the que with each new event.  
        event_buffer_length: 512
        runtime_settings:
            # The sampling rate (in Hz) to set the Tobii tracker too. This must be a valid
            # Sampling rate for the Tobii model you are using.
            sampling_rate: 60.0
            calibration:
                # The Tobii ioHub Common Eye Tracker Interface currently support 
                # a 9 pt HV9_POINTS calibration mode.
                # This is not a limitation of the Tobii system, it is of the 
                # current ioHub Common Eye Tracker Interface implementation.
                # Anyone want to add support for more calibration types for the Tobii? ;)
                type: HV9_POINTS
                # auto_pace can be True or False. If True, the eye tracker will 
                # automatically progress from one calibration point to the next.
                # If False, a manual key or button press is needed to progress to
                # the next point. Currently this parameter is ignored and auto_pace
                # is always True. TODO: Fix this. ;) 
                auto_pace: True
                # pacing_speed is the number of sec.msec that a calibration point should
                # be displayed before moving onto the next point when auto_pace is set to true.
                # If auto_pace is False, pacing_speed is ignored. Currently this parameter is 
                # ignored and pacing_speed is always equal to 2 seconds.
                # TODO: Fix this. ;) 
                pacing_speed: 1.5
                # screen_background_color specifies the r,g,b,a background color to 
                # set the calibration, validation, etc, screens to. Each element of the color
                # should be a value between 0 and 255. 0 == black, 255 == white. In general
                # the last value of the color list (alpha) can be left at 255, indicating
                # the color not mixed with the background color at all.
                screen_background_color: [128,128,128,255]
                # Target type defines what form of calibration graphic should be used
                # during calibration, validation, etc. modes.
                # Currently the Tobii implementation supports the following
                # target type: CIRCLE_TARGET. To do: Add support for other types, etc.
                target_type: CIRCLE_TARGET
                # The associated target attributes sub properties must be supplied
                # for the given target_type. If target type attribute sections are provided
                # for target types other than the entry associated with the specified target_type value
                # they will simply be ignored.
                circle_attributes:
                    outer_diameter: 33
                    inner_diameter: 6
                    outer_color: [255,255,255,255]
                    inner_color: [255,0,0,255]


Supported EyeTracker Device Event Types
########################################

The Tobii Analytics SDK 3.0 RC 1 provides real-time access to binocular sample data.
Therefore the BinocularEyeSample event type is supported when using a Tobii as 
the ioHub EyeTracker device. 

General Considerations
#######################

The Tobii Analytics SDK 3.0 RC 1 software provides streaming eye sample functionality,
there is no functionality to save the data being streamed to disk by the Tobii Analytics SDK 3.0 RC 1
itself. Therefore it is highly recommended that the ioDataStore be enabled for experiments using
the Tobii system, as the ioDataStore will save all sample events received from the Tobii system
when the ioHub EyeTracking device interface is in 'recording mode'. The hdf5 file saved
by the ioDataStore can then be used to retrieve the Tobii sample data for post hoc analysis.

