# This section includes all valid lc_technologies.eyegaze.EyeTracker Device
# settings that can be specified in an iohub_config.yaml
# or in a Python dictionary form and passed to the quickStartHubServer
# method. Any device parameters not specified when the device class is
# created by the ioHub Process will be assigned the default value
# indicated here.
#
eyetracker.hw.lc_technologies.eyegaze.EyeTracker:

    # name: The unique name to assign to the device instance created.
    #   The device is accessed from within the PsychoPy script 
    #   using the name's value; therefore it must be a valid Python
    #   variable name as well.
    #
    name: tracker

    # enable: Specifies if the device should be enabled by ioHub and monitored
    #   for events.
    #   True = Enable the device on the ioHub Server Process
    #   False = Disable the device on the ioHub Server Process. No events for
    #   this device will be reported by the ioHub Server.
    #    
    enable: True

    # saveEvents: *If* the ioHubDataStore is enabled for the experiment, then
    #   indicate if events for this device should be saved to the
    #   data_collection/keyboard event group in the hdf5 event file.
    #   True = Save events for this device to the ioDataStore.
    #   False = Do not save events for this device in the ioDataStore.
    #    
    saveEvents: True

    # streamEvents: Indicate if events from this device should be made available
    #   during experiment runtime to the PsychoPy Process.
    #   True = Send events for this device to  the PsychoPy Process in real-time.
    #   False = Do *not* send events for this device to the PsychoPy Process in real-time.
    #    
    streamEvents: True

    # auto_report_events: Indicate if events from this device should start being
    #   processed by the ioHub as soon as the device is loaded at the start of an experiment,
    #   or if events should only start to be monitored on the device when a call to the
    #   device's enableEventReporting method is made with a parameter value of True.
    #   True = Automatically start reporting events for this device when the experiment starts.
    #   False = Do not start reporting events for this device until enableEventReporting(True)
    #   is set for the device during experiment runtime.
    #
    auto_report_events: False

    # event_buffer_length: Specify the maximum number of events (for each
    #   event type the device produces) that can be stored by the ioHub Server
    #   before each new event results in the oldest event of the same type being
    #   discarded from the ioHub device event buffer.
    #
    event_buffer_length: 512

    # device_timer: The EyeGaze EyeTracker class uses the polling method to
    #   check for new events received from the EyeTracker device. device_timer.interval
    #   specifies the sec.msec time between device polls. 0.004 = 4 msec, so the device will
    #   be polled at a maxximum rate of 250 Hz. This polling rate is a 'target' value,
    #   and may not always be achieved depending on your computer specifications and the
    #   number and type of other devices being used. This can be checked by reviewing the
    #   confidence_interval column of any of the eye event tables saved to the DataStore
    #    
    device_timer:
        interval: 0.002

    # display_camera_image: Tell Eyegaze whether to display the full 640x480 
    # camera image in a separate window.
    #
    display_camera_image: False

    # camera_image_screen_position: Tell Eyegaze where to display the camera 
    #   image window on the scrren. Options are UPPER_RIGHT or UPPER_LEFT
    camera_image_screen_position: UPPER_RIGHT

    # host_connection: defines the type of coonnection to use to connect to the Eyegaze system.
    #   valid types are [LOCAL, SOCKET, SERIAL]
    #   If type != LOCAL, a 'parameter' setting must also be provided under host_connection.
    host_connection:
        type: LOCAL       
    
    # manufacturer_name:    manufacturer_name is used to store the name of the
    #   maker of the eye tracking device. This is for informational purposes only.
    #
    manufacturer_name: LC Technologies, Inc.

    # model_name: The below parameters are not used by the EyeGaze eye tracker
    #   implementation, so they can be left as is, or filled out for FYI only.
    #
    model_name: N/A

    # serial_number: The serial number for the specific isnstance of device used
    #   can be specified here. It is not used by the ioHub, so is FYI only.
    #
    serial_number: N/A

    # manufacture_date: The date of manufactiurer of the device 
    # can be specified here. It is not used by the ioHub,
    # so is FYI only.
    #   
    manufacture_date: DD-MM-YYYY

    # hardware_version: The device's hardware version can be specified here.
    #   It is not used by the ioHub, so is FYI only.
    #
    hardware_version: N/A
    
    # firmware_version: If the device has firmware, its revision number
    #   can be indicated here. It is not used by the ioHub, so is FYI only.
    #
    firmware_version: N/A

    # model_number: The device model number can be specified here.
    #   It is not used by the ioHub, so is FYI only.
    #
    model_number: N/A
    
    # software_version: The device driver and / or SDK software version number.
    #   This field is not used by ioHub, so is FYI only. 
    software_version: N/A

    # device_number: The device number to assign to the Analog Input device. 
    #   device_number is not used by this device type.
    #
    device_number: 0
