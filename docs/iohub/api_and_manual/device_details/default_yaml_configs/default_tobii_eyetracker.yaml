# This section includes all valid tobii.EyeTracker Device
# settings that can be specified in an iohub_config.yaml
# or in a Python dictionary form and passed to the quickStartHubServer
# method. Any device parameters not specified when the device class is
# created by the ioHub Process will be assigned the default value
# indicated here.
#
eyetracker.hw.tobii.EyeTracker:
    # name: The unique name to assign to the device instance created.
    #   The device is accessed from within the PsychoPy script 
    #   using the name's value; therefore it must be a valid Python
    #   variable name as well.
    #
    name: tracker

    # enable: Specifies if the device should be enabled by ioHub and monitored
    #   for events.
    #   True = Enable the device on the ioHub Server Process
    #   False = Disable the device on the ioHub Server Process. No events for
    #   this device will be reported by the ioHub Server.
    #    
    enable: True

    # saveEvents: *If* the ioHubDataStore is enabled for the experiment, then
    #   indicate if events for this device should be saved to the
    #   data_collection/keyboard event group in the hdf5 event file.
    #   True = Save events for this device to the ioDataStore.
    #   False = Do not save events for this device in the ioDataStore.
    #    
    saveEvents: True

    # streamEvents: Indicate if events from this device should be made available
    #   during experiment runtime to the PsychoPy Process.
    #   True = Send events for this device to  the PsychoPy Process in real-time.
    #   False = Do *not* send events for this device to the PsychoPy Process in real-time.
    #    
    streamEvents: True

    # auto_report_events: Indicate if events from this device should start being
    #   processed by the ioHub as soon as the device is loaded at the start of an experiment,
    #   or if events should only start to be monitored on the device when a call to the
    #   device's enableEventReporting method is made with a parameter value of True.
    #   True = Automatically start reporting events for this device when the experiment starts.
    #   False = Do not start reporting events for this device until enableEventReporting(True)
    #   is set for the device during experiment runtime.
    #
    auto_report_events: False

    # event_buffer_length: Specify the maximum number of events (for each
    #   event type the device produces) that can be stored by the ioHub Server
    #   before each new event results in the oldest event of the same type being
    #   discarded from the ioHub device event buffer.
    #
    event_buffer_length: 512

    # monitor_event_types: Specified which device event types that should be monitored
    #   and therefore saved to the DataStore or sent to the Experiment Process.
    #
    monitor_event_types: [ BinocularEyeSampleEvent,]

    # model_name: The model name of the Tobii device that you wish to
    #   connect to can be specified here, and only Tobii systems matching that
    #   model name will be considered as possible candidates for connection.
    #   If you only have one Tobii system connected to the computer, 
    #   this field can just be left empty.
    #    
    model_name:

    # serial_number: The serial number of the Tobii device that you wish to
    #   connect to can be specified here, and only the Tobii system matching
    #   that serial number will be connected to, if found. If you only have one
    #   Tobii system connected to the computer, this field can just be left empty.
    #
    serial_number:

    calibration:
        # type: The Tobii ioHub Common Eye Tracker Interface currently support 
        #   a 3, 5 and 9 point calibration mode.
        #   Valid types: THREE_POINTS,FIVE_POINTS,NINE_POINTS
        #
        type: NINE_POINTS

        # randomize: Should the target positions be randomized?
        #
        randomize: True

        # auto_pace: If True, the eye tracker will automatically progress
        #     from one calibration point to the next. If False, a manual
        #     key or button press is needed to progress to the next point.
        # 
        auto_pace: True
        
        # pacing_speed: The number of sec.msec that a calibration point should
        #   be displayed before moving onto the next point when auto_pace is set to true.
        #   If auto_pace is False, pacing_speed is ignored.
        #        
        pacing_speed: 1.5
        
        # screen_background_color: Specify the r,g,b background color to 
        #   set the calibration, validation, etc, screens to. Each element of
        #   the color should be a value between 0 and 255. 0 == black, 255 == white.
        #        
        screen_background_color: [128,128,128]
        
        # target_type: Target type defines what form of calibration graphic
        #   should be used during calibration, validation, etc. modes.
        #   Currently the Tobii implementation supports the following
        #   target type: CIRCLE_TARGET. 
        #   
        target_type: CIRCLE_TARGET
        
        # target_attributes: The associated target attribute properties 
        #   can be supplied for the given target_type. 
        target_attributes:
            
            # outer_diameter: the outer diameter of the circle, in pixels.
            #
            outer_diameter: 33
            
            # inner_diameter: the inner diameter of the circle, in pixels.
            #            
            inner_diameter: 6
            
            # outer_color: The color to use for the outer target 'ring'.
            #            
            outer_color: [255,255,255]
            
            # inner_color: The color to use for the center of the target.
            #            
            inner_color: [0,0,0]
    
    runtime_settings:
        # sampling_rate: The supported sampling rates for Tobii are model dependent. 
        #   Using a defualt of 60 Hz, with the assumption it is the most common.
        #
        sampling_rate: 60

        # track_eyes: Tobii supports BINOCULAR tracking mode only.
        #        
        track_eyes: BINOCULAR
            
    # manufacturer_name: manufacturer_name is used to store the name of the
    #   maker of the eye tracking device. This is for informational purposes only.
    #
    manufacturer_name:  Tobii Technology

    # manufacture_date: The date of manufactiurer of the device 
    # can be specified here. It is not used by the ioHub,
    # so is FYI only.
    #   
    manufacture_date: DD-MM-YYYY

    # hardware_version: The device's hardware version can be specified here.
    #   It is not used by the ioHub, so is FYI only.
    #
    hardware_version: N/A
    
    # firmware_version: If the device has firmware, its revision number
    #   can be indicated here. It is not used by the ioHub, so is FYI only.
    #
    firmware_version: N/A

    # model_number: The device model number can be specified here.
    #   It is not used by the ioHub, so is FYI only.
    #
    model_number: N/A
    
    # software_version: The device driver and / or SDK software version number.
    #   This field is not used by ioHub, so is FYI only. 
    software_version: N/A

    # device_number: The device number to assign to the Analog Input device. 
    #   device_number is not used by this device type.
    #
    device_number: 0

