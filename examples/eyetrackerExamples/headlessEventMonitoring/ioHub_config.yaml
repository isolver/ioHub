# iohub_config.yaml: settings related to the iohub process and the device types that are to be enabled for the
# experiment.
monitor_devices:
    - Display:
        name: display
        reporting_unit_type: pix
        device_number: 1
        physical_dimensions:
            width: 500
            height: 281
            unit_type: mm
        default_eye_distance:
            surface_center: 500
            unit_type: mm
        origin: top_left
    - Keyboard:
        name: kb
        save_events: True
        stream_events: True
    - Mouse:
        name: mouse
        save_events: True
        stream_events: True
    - Experiment:
        name: pc
        save_events: True
        stream_events: True
    - eyetracker.hw.tobii.EyeTracker:
        # Should the device be enabled by the ioHub Server? If False, it is the
        # same as if the device was not in the device list at all. 
        enable: True
        # The name of the device when accessed runtime the experiment run-time.
        name: tracker
        # Optionally restrict detected Tobii eye trackers that are accessable by
        # the computer to those with a matching Tobii model name. To not filter
        # by model name, comment the parameter out, or remove it from the 
        # device configuration. 
        #model_name: 
        # Optionally restrict the detected Tobii eye tracker to only the one 
        # with a matching Tobii serial number. To not filter by serial number,
        # comment the parameter out, or remove it from the device configuration. 
        #serial_number: 
        # Should events generated by the device be saved to the ioHub DataStore?
        save_events: True
        # Should events generated by the device be streamed to the Experiment Process
        # for online access?
        stream_events: True
        # The number of events that the device event que will store before replacing
        # the oldest event in the que with each new event.  
        event_buffer_length: 512
        runtime_settings:
            # The sampling rate to set the Tobii tracker too. This must be a valid
            # Sampling rate for the Tobii model you are using.
            sampling_rate: 60.0
        calibration:
            # The Tobii ioHub Common Eye Tracker Interface currently support 
            # a 3, 5 and 9 point calibration mode.
            # THREE_POINTS,FIVE_POINTS,NINE_POINTS
            type: NINE_POINTS

            # Should the target positions be randomized?
            randomize: False
            # auto_pace can be True or False. If True, the eye tracker will 
            # automatically progress from one calibration point to the next.
            # If False, a manual key or button press is needed to progress to
            # the next point. Currently this parameter is ignored and auto_pace
            # is always True. TODO: Fix this. ;) 
            auto_pace: True
            # pacing_speed is the number of sec.msec that a calibration point should
            # be displayed before moving onto the next point when auto_pace is set to true.
            # If auto_pace is False, pacing_speed is ignored. Currently this parameter is 
            # ignored and pacing_speed is always equal to 2 seconds.
            # TODO: Fix this. ;) 
            pacing_speed: 1.5
            # screen_background_color specifies the r,g,b,a background color to 
            # set the calibration, validation, etc, screens to. Each element of the color
            # should be a value between 0 and 255. 0 == black, 255 == white. In general
            # the last value of the color list (alpha) can be left at 255, indicating
            # the color not mixed with the background color at all.
            screen_background_color: [128,128,128,255]
            # Target type defines what form of calibration graphic should be used
            # during calibration, validation, etc. modes.
            # Currently the Tobii implementation supports the following
            # target type: CIRCLE_TARGET. To do: Add support for other types, etc.
            target_type: CIRCLE_TARGET
            # The associated target attributes sub properties must be supplied
            # for the given target_type. If target type attribute sections are provided
            # for target types other than the entry associated with the specified target_type value
            # they will simply be ignored.
            target_attributes:
                outer_diameter: 33
                inner_diameter: 6
                outer_color: [255,255,255,255]
                inner_color: [255,0,0,255]

data_store:
    enable: True
