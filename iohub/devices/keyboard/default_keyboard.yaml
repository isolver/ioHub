Keyboard:
    # name: The name you want to assign the keyboard device for the experiment
    #   This name is what will be used to access the device within the experiment
    #   script via the devices.[device_name] property of the ioHubConnection or
    #   ioHubExperimentRuntime classes.
    name: keyboard
    # enable: Specifies if the device should be enabled by ioHub and monitored
    #   for events.
    #   True = Enable the device on the ioHub Server Process
    #   False = Disable the device on the ioHub Server Process. No keyboard events will
    #       be reported by the ioHub Server.
    enable: True
    # saveEvents: *If* the ioHubDataStore is enabled for the experiment, then
    #   indicate if events for this device should be saved to the
    #   data_collection/keyboard event group in the hdf5 event file.
    #   True = Save events for this device to the ioDataStore.
    #   False = Do not save events for this device in the ioDataStore.
    save_events: True
    # streamEvents: Indicate if events from this device should be made available
    #   during experiment runtime to the Experiment / PsychoPy Process.
    #   True = Send events for this device to  the Experiment Process in real-time.
    #   False = Do *not* send events for this device to the Experiment Process in real-time.
    stream_events: True
    # auto_report_events: Indicate if events from this device should start being
    #   processed by the ioHub as soon as the device is loaded at the start of an experiment,
    #   or if events should only start to be monitored on the device when a call to the
    #   device's enableEventReporting method is made with a parameter value of True.
    #   True = Automatically start reporting events for this device when the experiment starts.
    #   False = Do not start reporting events for this device until enableEventReporting(True)
    #       is set for the device during experiment runtime.
    auto_report_events: True
    # event_buffer_length: Specify the maximum number of events (for each
    #   event type the device produces) that can be stored by the ioHub Server
    #   before each new event results in the oldest event of the same type being
    #   discarded from the ioHub device event buffer.
    event_buffer_length: 256
    # monitor_event_types: Specified which KeyboardEvent types should be monitored
    # for and therefore saved to the DataStore or sent to the Experiment Process.
    monitor_event_types: [KeyboardPressEvent, KeyboardReleaseEvent, KeyboardCharEvent]
    # The remaining settings are optional and are not used within the device 
    # logic of ioHub.
    device_number: 0
    # should the keyboard report key press events that are generated by the 
    # OS when a key is held down for an extended period of time ??
    report_auto_repeat_press_events: False
    model_name: N/A
    model_number: N/A
    manufacturer_name: N/A
    serial_number: N/A
    manufacture_date: DD-MM-YYYY
    software_version: N/A
    hardware_version: N/A
    firmware_version: N/A
